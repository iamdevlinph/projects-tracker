{"version":3,"sources":["containers/Settings/SettingsUtil.js","containers/Settings/Settings.js"],"names":["commonData","authorName","authorUrl","repoName","repoUrl","description","SettingsUtil","generateDefaultData","Object","objectSpread","updatedAt","moment","format","lastCommitMsgPlaceholder","issuesCount","prsCount","generateSafeData","generateWarningData","settings","subtract","update","warningCount","concat","issues","pulls","generateDangerData","dangerCount","SettingsContainer","resetSettings","this","props","_this$props","showColorPicker","activeColorPicker","loggedIn","ajaxInProgress","previewColor","previewCount","saveSettings","user","react_default","a","createElement","SettingsArea","components","SettingsSection","PreviewArea","data","defaultAvatar","photoURL","fromSettingsPage","OptionsArea","label","SettingsButtonsArea","onClick","color","withGap","float","Component","defaultProps","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5"],"mappings":"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","file":"static/js/7.e57e925f.chunk.js","sourcesContent":["import moment from 'moment';\n\nconst commonData = {\n  authorName: 'Author',\n  authorUrl: '#',\n  repoName: 'Repository',\n  repoUrl: '#',\n  description: 'Description',\n};\n\nconst generateDefaultData = () => ({\n  ...commonData,\n  updatedAt: moment().format(),\n  lastCommitMsgPlaceholder: 'Up to date',\n  issuesCount: 0,\n  prsCount: 0,\n});\n\nconst generateSafeData = () => ({\n  ...commonData,\n  updatedAt: moment().format(),\n  lastCommitMsgPlaceholder: 'Up to date',\n  issuesCount: 1,\n  prsCount: 1,\n});\n\nconst generateWarningData = settings => ({\n  ...commonData,\n  updatedAt: moment().subtract(settings.update.warningCount, 'd').format(),\n  lastCommitMsgPlaceholder: `Updated ${settings.update.warningCount} days ago`,\n  issuesCount: settings.issues.warningCount,\n  prsCount: settings.pulls.warningCount,\n});\n\nconst generateDangerData = settings => ({\n  ...commonData,\n  updatedAt: moment().subtract(settings.update.dangerCount, 'd').format(),\n  lastCommitMsgPlaceholder: `Updated ${settings.update.dangerCount} days ago`,\n  issuesCount: settings.issues.dangerCount,\n  prsCount: settings.pulls.dangerCount,\n});\n\nconst SettingsUtil = {\n  generateDefaultData,\n  generateSafeData,\n  generateWarningData,\n  generateDangerData,\n};\n\nexport default SettingsUtil;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card, SettingsCard, Button, LoaderOverlay,\n} from '../../components';\nimport SettingsUtil from './SettingsUtil';\n\nclass SettingsContainer extends Component {\n  componentWillUnmount() {\n    const { resetSettings } = this.props;\n    resetSettings();\n  }\n\n  render() {\n    const {\n      settings, showColorPicker, activeColorPicker, loggedIn, ajaxInProgress,\n      previewColor, previewCount, resetSettings, saveSettings, user,\n    } = this.props;\n    const display = !settings\n      ? (\n        <div>\n          Fetching stuff\n        </div>\n      ) : (\n        <SettingsArea>\n          {ajaxInProgress > 0 && (<LoaderOverlay />)}\n          <SettingsSection>\n            <h3>\n              Preview\n            </h3>\n            <PreviewArea>\n              <span>\n                Default\n              </span>\n              <Card\n                data={SettingsUtil.generateDefaultData()}\n                settings={settings}\n                defaultAvatar={user.photoURL}\n                fromSettingsPage\n              />\n              <span>\n                Safe\n              </span>\n              <Card\n                data={SettingsUtil.generateSafeData()}\n                settings={settings}\n                defaultAvatar={user.photoURL}\n                fromSettingsPage\n              />\n              <span>\n                Warning\n              </span>\n              <Card\n                data={SettingsUtil.generateWarningData(settings)}\n                settings={settings}\n                defaultAvatar={user.photoURL}\n                fromSettingsPage\n              />\n              <span>\n                Danger\n              </span>\n              <Card\n                data={SettingsUtil.generateDangerData(settings)}\n                settings={settings}\n                defaultAvatar={user.photoURL}\n                fromSettingsPage\n              />\n            </PreviewArea>\n            <OptionsArea>\n              <SettingsCard\n                label=\"Repo Update\"\n                settings={settings.update}\n                showColorPicker={showColorPicker}\n                activeColorPicker={activeColorPicker}\n                previewColor={previewColor}\n                previewCount={previewCount}\n              />\n              <SettingsCard\n                label=\"Issues\"\n                settings={settings.issues}\n                showColorPicker={showColorPicker}\n                activeColorPicker={activeColorPicker}\n                previewColor={previewColor}\n                previewCount={previewCount}\n              />\n              <SettingsCard\n                label=\"Pull Requests\"\n                settings={settings.pulls}\n                showColorPicker={showColorPicker}\n                activeColorPicker={activeColorPicker}\n                previewColor={previewColor}\n                previewCount={previewCount}\n              />\n            </OptionsArea>\n            {loggedIn\n              ? (\n                <SettingsButtonsArea>\n                  <Button label=\"Reset\" onClick={() => resetSettings()} color=\"#f96616\" withGap float=\"right\" />\n                  <Button label=\"Save\" onClick={() => saveSettings(settings)} color=\"#08af4c\" withGap float=\"right\" />\n                </SettingsButtonsArea>\n              )\n              : null}\n          </SettingsSection>\n        </SettingsArea>\n      );\n    return display;\n  }\n}\n\nSettingsContainer.propTypes = {\n  settings: PropTypes.object,\n  showColorPicker: PropTypes.func.isRequired,\n  previewColor: PropTypes.func.isRequired,\n  activeColorPicker: PropTypes.string,\n  previewCount: PropTypes.func.isRequired,\n  resetSettings: PropTypes.func.isRequired,\n  saveSettings: PropTypes.func.isRequired,\n  loggedIn: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired,\n  ajaxInProgress: PropTypes.bool.isRequired,\n};\n\nSettingsContainer.defaultProps = {\n  settings: null,\n  activeColorPicker: '',\n};\n\nexport default SettingsContainer;\n\nconst SettingsArea = styled.div`\n  display: grid;\n  grid-template-rows: 2px min-content;\n  grid-template-areas:\n    \"settings-top-pad\"\n    \"settings\";\n  row-gap: 10px;\n`;\nconst SettingsSection = styled.div`\n  grid-area: settings;\n`;\nconst PreviewArea = styled.div`\n  display: grid;\n  grid-template-columns: min-content 1fr;\n  column-gap: 10px;\n  grid-row-gap: 10px;\n  margin-bottom: 20px;\n  & > span{\n    line-height: 36px;\n    font-weight: bold;\n    font-size: 14px;\n  }\n`;\nconst OptionsArea = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  column-gap: 10px;\n`;\nconst SettingsButtonsArea = styled.div`\n  display: flex;\n  margin-top: 10px;\n  float: right;\n`;\n"],"sourceRoot":""}