{"version":3,"sources":["containers/Home/Home.js"],"names":["HomeContainer","props","projectAreaDisplay","projects","settings","sortList","sort","searchList","projectCards","map","project","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components__WEBPACK_IMPORTED_MODULE_3__","key","data","length","ProjectList","ProjectEmptyList","HomeArea","FilterArea","disabled","sortFunc","ProjectListArea","defaultProps","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5"],"mappings":"6xBAMA,IAAMA,EAAgB,SAACC,GAAU,IAW3BC,EATFC,EACEF,EADFE,SAAUC,EACRH,EADQG,SAAUC,EAClBJ,EADkBI,SAAUC,EAC5BL,EAD4BK,KAAMC,EAClCN,EADkCM,WAEhCC,EAAgBL,GAAYC,GAAaD,EAASM,IAAI,SAACC,GAK3D,OAFEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,IAAKL,EAAQK,IAAKC,KAAMN,EAASN,SAAUA,MAyBrD,OAnBEF,EADEC,GAAYC,EACOI,EAAaS,OAAS,EAEvCN,EAAAC,EAAAC,cAACK,EAAD,KACGV,GAIHG,EAAAC,EAAAC,cAACM,EAAD,oBAMFR,EAAAC,EAAAC,cAAA,gCAOFF,EAAAC,EAAAC,cAACO,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAD,KACEV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEQ,WAAYnB,GAAYC,GACxBmB,SAAUlB,EACVC,KAAMA,EACNC,WAAYA,KAGhBI,EAAAC,EAAAC,cAACW,EAAD,KACGtB,KAcTF,EAAcyB,aAAe,CAC3BtB,SAAU,KACVC,SAAU,MAGGJ,YAEf,IAAMoB,EAAWM,IAAOC,IAAVC,KASRV,EAAcQ,IAAOC,IAAVE,KAMXV,EAAmBO,IAAOC,IAAVG,KAGhBN,EAAkBE,IAAOC,IAAVI,KAGfV,EAAaK,IAAOC,IAAVK","file":"static/js/1.569d8c4c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Card, Filter } from '../../components';\n\nconst HomeContainer = (props) => {\n  const {\n    projects, settings, sortList, sort, searchList,\n  } = props;\n  const projectCards = (projects && settings) && projects.map((project) => {\n    let el = null;\n    el = (\n      <Card key={project.key} data={project} settings={settings} />\n    );\n    return el;\n  });\n  let projectAreaDisplay;\n  if (projects && settings) {\n    projectAreaDisplay = projectCards.length > 0\n      ? (\n        <ProjectList>\n          {projectCards}\n        </ProjectList>\n      )\n      : (\n        <ProjectEmptyList>\n          No projects\n        </ProjectEmptyList>\n      );\n  } else {\n    projectAreaDisplay = (\n      <div>\n        Fetching projects\n      </div>\n    );\n  }\n\n  return (\n    <HomeArea>\n      <FilterArea>\n        <Filter\n          disabled={!(projects && settings)}\n          sortFunc={sortList}\n          sort={sort}\n          searchList={searchList}\n        />\n      </FilterArea>\n      <ProjectListArea>\n        {projectAreaDisplay}\n      </ProjectListArea>\n    </HomeArea>\n  );\n};\n\nHomeContainer.propTypes = {\n  projects: PropTypes.array,\n  settings: PropTypes.object,\n  sortList: PropTypes.func.isRequired,\n  sort: PropTypes.object.isRequired,\n  searchList: PropTypes.func.isRequired,\n};\n\nHomeContainer.defaultProps = {\n  projects: null,\n  settings: null,\n};\n\nexport default HomeContainer;\n\nconst HomeArea = styled.div`\n  display: grid;\n  grid-template-rows: 2px 35px min-content 5px;\n  grid-template-areas:\n    \"home-top-pad\"\n    \"filter\"\n    \"list\";\n  row-gap: 10px;\n`;\nconst ProjectList = styled.div`\n  display: grid;\n  grid-template-rows: 1fr;\n  column-gap: 20px;\n  row-gap: 10px;\n`;\nconst ProjectEmptyList = styled.div`\n  grid-area: list;\n`;\nconst ProjectListArea = styled.div`\n  grid-area: list;\n`;\nconst FilterArea = styled.div`\n  grid-area: filter;\n`;\n"],"sourceRoot":""}